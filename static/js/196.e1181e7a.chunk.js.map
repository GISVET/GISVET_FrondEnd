{"version":3,"file":"static/js/196.e1181e7a.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/node_modules/.pnpm/@kurkle+color@0.2.1/node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.js","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.colors.ts","../node_modules/chart.js/src/plugins/plugin.decimation.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/chart.js/src/index.ts","../node_modules/chart.js/auto/auto.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ActiveDataPoint, ChartEvent} from '../../types';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../../types/geometric';\nimport {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import {type ChartMeta, type PointElement} from '../../types';\n\nimport {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply<any, TArgs, void>(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import colorLib, {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {Point, toFontString} from './helpers.canvas';\nimport type {ChartArea, FontSpec} from '../../types';\nimport type {TRBL, TRBLCorners} from '../../types/geometric';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<P extends T, T extends object>(parentContext: P, context: T): P extends null ? T : P & T {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\nimport {ChartArea} from '../../types';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {ChartArea, Scale} from '../../types';\nimport Chart from '../core/core.controller';\nimport {ChartEvent} from '../types';\nimport {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../../types/geometric';\nimport type {SplinePoint} from './helpers.curve';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import type {Chart, ChartConfiguration, ChartDataset} from '../types';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n}\n\ntype DatasetColorizer = (dataset: ChartDataset, i: number) => void;\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction createDefaultDatasetColorizer() {\n  return (dataset: ChartDataset, i: number) => {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n  };\n}\n\nfunction createDoughnutDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  };\n}\n\nfunction createPolarAreaDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  };\n}\n\nfunction getColorizer(type: string) {\n  if (type === 'doughnut' || type === 'pie') {\n    return createDoughnutDatasetColorizer();\n  } else if (type === 'polarArea') {\n    return createPolarAreaDatasetColorizer();\n  }\n  return createDefaultDatasetColorizer();\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n  },\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      type,\n      options: {elements},\n      data: {datasets}\n    } = chart.config as ChartConfiguration;\n\n    if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n      return;\n    }\n\n    const colorizer: DatasetColorizer = getColorizer(type);\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers';\nexport * from './core';\nexport * from './elements';\nexport * from './platform';\nexport * from './plugins';\nexport * from './scales';\n\nimport * as controllers from './controllers';\nimport * as elements from './elements';\nimport * as plugins from './plugins';\nimport * as scales from './scales';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","call","e","result","Super","getPrototypeOf","NewTarget","this","constructor","arguments","apply","possibleConstructorReturn","_superPropBase","object","property","hasOwnProperty","_get","get","bind","receiver","base","desc","getOwnPropertyDescriptor","value","_getPrototypeOf","o","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","_possibleConstructorReturn","self","noop","uid","id","isNullOrUndef","isArray","Array","type","toString","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","each","loopable","reverse","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","klen","k","isValidKey","indexOf","_merger","options","tval","sval","merge","sources","current","merger","mergeIf","_mergerIf","keyResolvers","v","x","y","_getKeyResolver","parts","split","tmp","push","_splitKey","obj","resolveObjectKey","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","isNumber","n","isNaN","_setMinAndMaxByKey","array","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","getUserBounds","minDefined","maxDefined","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","colorLib","getHoverColor","saturate","darken","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","chart","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","local","appliers","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","deleteProperty","_keys","_cached","_resolveWithPrefixes","_scopes","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","_date","init","formats","diff","startOf","endOf","members","DateAdapterBase","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","createDoughnutDatasetColorizer","createPolarAreaDatasetColorizer","containsColorsDefinitions","_args","colorizer","cleanDecimatedDataset","cleanDecimatedData","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","maxAreaPoint","maxArea","nextA","bucketWidth","sampledIndex","endIndex","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","cursor","defaultColor","halfFontSize","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}